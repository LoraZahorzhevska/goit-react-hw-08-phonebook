{"version":3,"sources":["redux/phonebooks/phonebooks-actions.js","redux/auth/auth-actions.js","redux/auth/auth-reducer.js","redux/auth/auth-operations.js","redux/auth/auth-selectors.js","components/UserMenu/Navigation.js","components/UserMenu/AuthNav.js","components/UserMenu/UserMenu.js","components/UserMenu/AppBar.js","components/PrivateRoute/PrivateRoute.js","components/PublicRoute/PublicRoute.js","App.js","redux/phonebooks/phonebooks-reducer.js","redux/phonebooks/store.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","initialUserState","name","email","user","createReducer","authActions","_","payload","token","error","isAuthenticated","combineReducers","axios","defaults","baseURL","headers","common","Authorization","getCurrentUser","dispatch","getState","a","persistedToken","auth","get","response","data","massage","login","credentials","post","message","register","logout","getIsAuthenticated","state","getUserName","connect","authSelectors","to","exact","AuthNav","mapDispatchToProps","onLogout","authOperations","avatar","src","alt","width","type","onClick","styles","header","display","justifyContent","alingItems","borderBotton","style","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","Contacts","App","this","onGetCurrentUser","fallback","path","items","filter","contact","id","loading","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phonebooksReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById"],"mappings":"+IAAA,+VAEaA,EAAsBC,YAAa,kCACnCC,EAAsBD,YAAa,kCACnCE,EAAoBF,YAAa,gCAIjCG,EAAoBH,YAAa,gCACjCI,EAAoBJ,YAAa,gCACjCK,EAAkBL,YAAa,8BAE/BM,EAAuBN,YAAa,mCACpCO,EAAuBP,YAAa,mCACpCQ,EAAqBR,YAAa,iCAGlCS,EAAeT,YAAa,4B,wJCE1B,GACbU,gBAlBsBV,YAAa,wBAmBnCW,gBAlBsBX,YAAa,wBAmBnCY,cAlBoBZ,YAAa,sBAmBjCa,aAjBmBb,YAAa,qBAkBhCc,aAjBmBd,YAAa,qBAkBhCe,WAjBiBf,YAAa,mBAkB9BgB,cAhBoBhB,YAAa,sBAiBjCiB,cAhBoBjB,YAAa,sBAiBjCkB,YAhBkBlB,YAAa,oBAiB/BmB,sBAf4BnB,YAAa,8BAgBzCoB,sBAf4BpB,YAAa,8BAgBzCqB,oBAf0BrB,YAAa,6B,cCZnCsB,EAAmB,CAAEC,KAAM,KAAMC,MAAO,MAExCC,EAAOC,YAAcJ,GAAD,mBACrBK,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBJ,QADrC,cAErBE,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBJ,QAFlC,cAGrBE,EAAYV,eAAgB,kBAAMK,KAHb,cAIrBK,EAAYP,uBAAwB,SAACQ,EAAD,YAAMC,WAJrB,IAOpBC,EAAQJ,YAAc,MAAD,mBACtBC,EAAYhB,iBAAkB,SAACiB,EAAD,YAAMC,QAAsBC,SADpC,cAEtBH,EAAYb,cAAe,SAACc,EAAD,YAAMC,QAAsBC,SAFjC,cAGtBH,EAAYV,eAAgB,kBAAM,QAHZ,IAMrBc,EAAQL,YAAc,MAAD,mBACtBC,EAAYf,eAAgB,SAACgB,EAAD,YAAMC,WADZ,cAEtBF,EAAYZ,YAAa,SAACa,EAAD,YAAMC,WAFT,cAGtBF,EAAYT,aAAc,SAACU,EAAD,YAAMC,WAHV,cAItBF,EAAYN,qBAAsB,SAACO,EAAD,YAAMC,WAJlB,IAQrBG,EAAkBN,aAAc,GAAD,mBAChCC,EAAYhB,iBAAkB,kBAAM,KADJ,cAEhCgB,EAAYb,cAAe,kBAAM,KAFD,cAGhCa,EAAYP,uBAAwB,kBAAM,KAHV,cAIhCO,EAAYf,eAAgB,kBAAM,KAJF,cAKhCe,EAAYZ,YAAa,kBAAM,KALC,cAMhCY,EAAYN,qBAAsB,kBAAM,KANR,cAOhCM,EAAYV,eAAgB,kBAAM,KAPF,IAUtBgB,cAAgB,CAC3BR,OACAO,kBACAF,QACAC,U,0CCtCJG,IAAMC,SAASC,QAAU,wCAEzB,IAAMN,EAAQ,SACRA,GACFI,IAAMC,SAASE,QAAQC,OAAOC,cAA9B,iBAAwDT,IAFtDA,EAAQ,WAKVI,IAAMC,SAASE,QAAQC,OAAOC,cAAgB,IA2DnC,GAAEC,eAnBM,yDAAM,WAAOC,EAAUC,GAAjB,mBAAAC,EAAA,2DAGvBD,IADaE,EAFU,EAEzBC,KAAQf,MAFiB,wDAQ3BA,EAAUc,GACVH,EAASd,EAAYR,yBATM,kBAWFe,IAAMY,IAAI,kBAXR,OAWnBC,EAXmB,OAYzBN,EAASd,EAAYP,sBAAsB2B,EAASC,OAZ3B,kDAczBP,EAASd,EAAYN,oBAAoB,KAAM4B,UAdtB,0DAAN,yDAmBUC,MA5CnB,SAACC,GAAD,8CAAiB,WAAOV,GAAP,eAAAE,EAAA,6DAC7BF,EAASd,EAAYd,gBADQ,kBAGJqB,IAAMkB,KAAK,eAAgBD,GAHvB,OAGrBJ,EAHqB,OAK3BjB,EAAUiB,EAASC,KAAKlB,OACxBW,EAASd,EAAYb,aAAaiC,EAASC,OANhB,gDAQ3BP,EAASd,EAAYZ,WAAW,KAAMsC,UARX,yDAAjB,uDA4C0BC,SAvDvB,SAACH,GAAD,8CAAiB,WAAOV,GAAP,eAAAE,EAAA,6DAChCF,EAASd,EAAYjB,mBADW,kBAGPwB,IAAMkB,KAAK,gBAAiBD,GAHrB,OAGxBJ,EAHwB,OAI9BjB,EAAUiB,EAASC,KAAKlB,OACxBW,EAASd,EAAYhB,gBAAgBoC,EAASC,OALhB,gDAO9BP,EAASd,EAAYf,cAAc,KAAMyC,UAPX,yDAAjB,uDAuDiCE,OAhCnC,yDAAM,WAAOd,GAAP,SAAAE,EAAA,6DACnBF,EAASd,EAAYX,iBADF,kBAIXkB,IAAMkB,KAAK,iBAJA,OAMjBtB,IACAW,EAASd,EAAYV,iBAPJ,gDASjBwB,EAASd,EAAYT,YAAY,KAAMmC,UATtB,yDAAN,wDCjCA,GAAEG,mBAJU,SAACC,GAAD,OAAWA,EAAMZ,KAAKb,iBAIZ0B,YAHjB,SAACD,GAAD,OAAWA,EAAMZ,KAAKpB,KAAKF,Q,oJCiBhCoC,eAHS,SAAAF,GAAK,MAAK,CAC9BzB,gBAAiB4B,IAAcJ,mBAAmBC,MAEvCE,EAbI,SAAC,GAAD,IAAG3B,EAAH,EAAGA,gBAAH,OACf,gCACI,cAAC,IAAD,CAAS6B,GAAG,IAAIC,OAAK,EAArB,yDACC9B,GACG,cAAC,IAAD,CAAS6B,GAAG,YAAZ,+DCCGE,EAPC,kBACZ,gCACI,cAAC,IAAD,CAASF,GAAG,YAAYC,OAAK,EAA7B,iFACA,cAAC,IAAD,CAASD,GAAG,SAAZ,iDCYFG,EAAqB,CACvBC,SAAUC,IAAeX,QAGdI,eATS,SAAAF,GAAK,MAAK,CAC9BlC,KAAMqC,IAAcF,YAAYD,MAQIO,EAAzBL,EAlBE,SAAC,GAAD,IAAGQ,EAAH,EAAGA,OAAQ5C,EAAX,EAAWA,KAAM0C,EAAjB,EAAiBA,SAAjB,OACb,gCACI,qBAAKG,IAAKD,EAAQE,IAAI,GAAGC,MAAM,OAC/B,6CAAgB/C,KAChB,wBAAQgD,KAAK,SAASC,QAASP,EAA/B,kDCAFQ,EAAS,CACXC,OAAQ,CACJC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,aAAc,uBAiBPnB,eALS,SAAAF,GAAK,MAAK,CAC9BzB,gBAAiB4B,IAAcJ,mBAAmBC,MAIvCE,EAbA,SAAC,GAAD,IAAG3B,EAAH,EAAGA,gBAAH,OACX,yBAAQ+C,MAAON,EAAOC,OAAtB,UACI,cAAC,EAAD,IACC1C,EAAkB,cAAC,EAAD,IAAe,cAAC,EAAD,U,+DCG3B2B,eAJS,SAAAF,GAAK,MAAK,CAC9BzB,gBAAiB4B,IAAcJ,mBAAmBC,MAGvCE,EAlBM,SAAC,GAAD,IACNqB,EADM,EACjBC,UACAjD,EAFiB,EAEjBA,gBACAkD,EAHiB,EAGjBA,WACGC,EAJc,wBAMjB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAAC,GAAK,OACTrD,EAAkB,cAACgD,EAAD,eAAeK,IAAY,cAAC,IAAD,CAAUxB,GAAIqB,W,+CCcxDvB,eAJS,SAAAF,GAAK,MAAK,CAC9BzB,gBAAiB4B,IAAcJ,mBAAmBC,MAGvCE,EArBK,SAAC,GAAD,IACLqB,EADK,EAChBC,UACAjD,EAFgB,EAEhBA,gBACAkD,EAHgB,EAGhBA,WACGC,EAJa,wBAMhB,cAAC,IAAD,2BACQA,GADR,IAEIC,OAAQ,SAAAC,GAAK,OAAIrD,GAAmBmD,EAAWG,WAC3C,cAAC,IAAD,CAAUzB,GAAIqB,IAEd,cAACF,EAAD,eAAeK,WCVrBE,EAAWC,gBAAK,kBAAM,gCACtBC,EAAeD,gBAAK,kBAAM,gCAC1BE,EAAYF,gBAAK,kBAAM,gCACvBG,EAAWH,gBAAK,kBAAM,gCAEtBI,E,4MACJnC,MAAQ,G,uDAGR,WACEoC,KAAKR,MAAMS,qB,oBAGb,WACE,OACE,gCACE,cAAC,EAAD,IAEA,cAAC,WAAD,CAAUC,SAAU,gDAApB,SACE,eAAC,IAAD,WACE,cAAC,EAAD,CAAajC,OAAK,EAACkC,KAAK,IAAIf,UAAWM,IACvC,cAAC,EAAD,CACES,KAAK,YACLV,YAAU,EACVJ,WAAW,YACXD,UAAWQ,IAEb,cAAC,EAAD,CACEO,KAAK,SACLV,YAAU,EACVJ,WAAW,YACXD,UAAWS,IAEb,cAAC,EAAD,CACEM,KAAK,YACLf,UAAWU,EACXT,WAAW,uB,GA/BPF,aA4CZhB,EAAqB,CACzB8B,iBAAkB5B,IAAe1B,gBAGpBmB,cAAQ,KAAMK,EAAdL,CAAkCiC,G,sEC5C3CK,EAAQvE,YAAc,IAAD,mBACtBzB,KAAsB,SAAC2B,EAAD,YAAMC,WADN,cAEtBzB,KAAoB,SAACqD,EAAD,YAAU5B,SAAV,mBAAqC4B,OAFnC,cAGtBlD,KAAuB,SAACkD,EAAD,OAAU5B,EAAV,EAAUA,QAAV,OAAwB4B,EAAMyC,QAAO,SAAAC,GAAO,OAChEA,EAAQC,KAAOvE,QAJI,IAOrBwE,EAAU3E,aAAc,GAAD,mBACxB3B,KAAsB,kBAAM,KADJ,cAExBE,KAAsB,kBAAM,KAFJ,cAGxBC,KAAoB,kBAAM,KAHF,cAIxBC,KAAoB,kBAAM,KAJF,cAKxBC,KAAoB,kBAAM,KALF,cAMxBC,KAAkB,kBAAM,KANA,cAOxBC,KAAuB,kBAAM,KAPL,cAQxBC,KAAuB,kBAAM,KARL,cASxBC,KAAqB,kBAAM,KATH,IAYvB0F,EAASxE,YAAc,GAAD,eACvBjB,KAAe,SAACmB,EAAD,YAAMC,YAGXI,cAAgB,CAC3BgE,QACAC,SACAG,Y,iBC3BEC,EAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAOdC,MAGIC,EAAoB,CACxBC,IAAK,OACLC,YACAC,UAAW,CAAC,UAGRC,EAAQC,YAAe,CAC3BC,QAAS,CACP1E,KAAM2E,YAAeP,EAAmBQ,KACxCC,SAAUC,GAEZrB,aACAsB,UAAUC,IAMG,IAAER,QAAOS,UAHNC,YAAaV,I,SChC/BW,IAAS5C,OACP,cAAC,IAAM6C,WAAP,UACE,cAAC,IAAD,CAAUZ,MAAOA,GAAMA,MAAvB,SACE,cAAC,KAAD,CAAahB,QAAS,KAAMyB,UAAWT,GAAMS,UAA7C,SACE,cAAC,IAAD,UACE,cAAC,EAAD,YAKRI,SAASC,eAAe,W","file":"static/js/main.12c4630d.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction('phonebooks/fetchContactRequest');\nexport const fetchContactSuccess = createAction('phonebooks/fetchContactSuccess');\nexport const fetchContactError = createAction('phonebooks/fetchContactError');\n\n\n\nexport const addContactRequest = createAction('phonebooks/addContactRequest');\nexport const addContactSuccess = createAction('phonebooks/addContactSuccess');\nexport const addContactError = createAction('phonebooks/addContactError');\n\nexport const deleteContactRequest = createAction('phonebooks/deleteContactRequest');\nexport const deleteContactSuccess = createAction('phonebooks/deleteContactSuccess');\nexport const deleteContactError = createAction('phonebooks/deleteContactError');\n\n\nexport const changeFilter = createAction('phonebooks/changeFilter')\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n    [authActions.registerError]: (_, { payload }) => payload,\n    [authActions.loginError]: (_, { payload }) => payload,\n    [authActions.logoutError]: (_, { payload }) => payload,\n    [authActions.getCurrentUserError]: (_, { payload }) => payload,\n\n});\n\nconst isAuthenticated = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false,\n    [authActions.logoutSuccess]: () => false,\n})\n\nexport default combineReducers({\n    user,\n    isAuthenticated,\n    token,\n    error,\n});","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n    token.set(response.data.token);\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst login = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest());\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logout = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n  try {\n    const response = await axios.get(\"/users/current\");\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.massage));\n  }\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getCurrentUser, login, register, logout };\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\nconst getUserName = (state) => state.auth.user.name;\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getIsAuthenticated, getUserName };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nconst Navigation = ({ isAuthenticated }) => (\n    <div>\n        <NavLink to=\"/\" exact> Главная</NavLink>\n        {isAuthenticated && (\n            <NavLink to=\"/contacts\"> Заметки\n            </NavLink>)}\n\n    </div>\n)\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n})\nexport default connect(mapStateToProps)(Navigation);","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst AuthNav = () => (\n    <div>\n        <NavLink to=\"/register\" exact> Регистрация</NavLink>\n        <NavLink to=\"/login\"> Логин</NavLink>\n    </div>\n)\n\nexport default AuthNav;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { authSelectors, authOperations } from '../../redux/auth';\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n    <div>\n        <img src={avatar} alt=\"\" width=\"32\" />\n        <span>Welcome, {name}</span>\n        <button type=\"button\" onClick={onLogout}>Выйти</button>\n    </div>\n\n)\n\nconst mapStateToProps = state => ({\n    name: authSelectors.getUserName(state),\n    // avatar:\n});\n\nconst mapDispatchToProps = {\n    onLogout: authOperations.logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);","import React from 'react';\nimport Navigation from './Navigation';\nimport AuthNav from './AuthNav';\nimport UserMenu from './UserMenu';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n\nconst styles = {\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alingItems: 'center',\n        borderBotton: '1px, solid #2A363B',\n    },\n}\n\nconst AppBar = ({ isAuthenticated }) => (\n    <header style={styles.header} >\n        <Navigation />\n        {isAuthenticated ? <UserMenu /> : <AuthNav />}\n    </header>\n);\n\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\nimport { authSelectors } from '../../redux/auth';\n\nconst PrivateRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props =>\n            isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { authSelectors } from '../../redux/auth';\n\n\n\nconst PublicRoute = ({\n    component: Component,\n    isAuthenticated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props => isAuthenticated && routeProps.restricted ? (\n            <Redirect to={redirectTo} />\n        ) : (\n            <Component {...props} />\n        )\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Switch } from \"react-router-dom\";\nimport AppBar from './components/UserMenu/AppBar';\nimport { authOperations } from './redux/auth';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute/PublicRoute';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst Contacts = lazy(() => import('./views/Contacts'));\n\nclass App extends Component {\n  state = {\n  }\n\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <div>\n        <AppBar />\n\n        <Suspense fallback={<p>Loading page...</p>}>\n          <Switch>\n            <PublicRoute exact path=\"/\" component={HomeView} />\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={RegisterView}\n            />\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/contacts\"\n              component={LoginView}\n            />\n            <PrivateRoute\n              path=\"/contacts\"\n              component={Contacts}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n\n\n      </div>\n    )\n  }\n\n}\n\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser\n}\n\nexport default connect(null, mapDispatchToProps)(App);","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    changeFilter,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError,\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n} from './phonebooks-actions';\n\n\n\nconst items = createReducer([], {\n    [fetchContactSuccess]: (_, { payload }) => payload,\n    [addContactSuccess]: (state, { payload }) => [payload, ...state],\n    [deleteContactSuccess]: (state, { payload }) => state.filter(contact =>\n        contact.id !== payload),\n})\n\nconst loading = createReducer(false, {\n    [fetchContactRequest]: () => true,\n    [fetchContactSuccess]: () => false,\n    [fetchContactError]: () => false,\n    [addContactRequest]: () => true,\n    [addContactSuccess]: () => false,\n    [addContactError]: () => false,\n    [deleteContactRequest]: () => true,\n    [deleteContactSuccess]: () => false,\n    [deleteContactError]: () => false,\n});\n\nconst filter = createReducer('', {\n    [changeFilter]: (_, { payload }) => payload,\n})\n\nexport default combineReducers({\n    items,\n    filter,\n    loading,\n})\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport phonebooksReducer from \"./phonebooks-reducer\";\nimport { authReducer } from \"../auth\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  // myMiddleware,\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phonebooksReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport store from './redux/phonebooks/store';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}