{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactList/ContactList.module.css","../node_modules/uuid/dist/esm-browser/rng.js","redux/phonebooks/phonebooks-selectors.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","components/ContactForm/ContactForm.js","redux/phonebooks/phonebooks-operations.js","components/Filter/Filter.js","components/ContactList/ContactList.js","views/Contacts.js"],"names":["module","exports","getRandomValues","getIsloadingContacts","state","contacts","loading","getFilter","filter","getItems","items","getVisibleContacts","createSelector","allContacts","filterNormalize","toLowerCase","contact","name","includes","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","TypeError","v4","options","buf","rnds","random","ContactForm","inputId","uuidv4","number","handleInputChange","evt","console","log","currentTarget","value","setState","handleSubmit","preventDefault","props","find","alert","reset","addContact","className","styles","container","onSubmit","this","form","htmlFor","label","type","pattern","title","required","onChange","id","Component","connect","dispatch","phonebooksActions","axios","post","then","data","catch","error","message","Ð¾nChange","e","changeFilter","onDeleteContact","delete","deleteContact","map","contactList","onClick","Contacts","fetchContact","isloadingContacts","a","get"],"mappings":"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","file":"static/js/3.fd2e3861.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__Lgcn8\",\"label\":\"ContactForm_label__1QDfe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__2HDMh\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getIsloadingContacts = state => state.contacts.loading;\n\nexport const getFilter = state => state.contacts.filter;\n\nexport const getItems = state => state.contacts.items;\n\nexport const getVisibleContacts = createSelector(\n    [getItems, getFilter],\n    (allContacts, filter) => {\n        const filterNormalize = filter.toLowerCase();\n        return allContacts.filter(contact =>\n            contact.name.toLowerCase().includes(filterNormalize),\n        );\n\n    }\n)\n\n\n// export const getVisibleContacts = state => {\n//     const allContacts = getItems(state);\n//     const filter = getFilter(state);\n//     const filterNormalize = filter.toLowerCase();\n\n//     return allContacts.filter(contact =>\n//         contact.name.toLowerCase().includes(filterNormalize),\n//     );\n// }","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getItems, addContact } from '../../redux/phonebooks';\n// import * as phonebooksOperations from '../../redux/phonebooks/phonebooks-operations';\n// import * as phonebookSelectors from '../../redux/phonebooks/phonebooks-selectors';\n\nclass ContactForm extends Component {\n    inputId = uuidv4();\n    state = {\n        name: '',\n        number: '',\n\n    };\n    handleInputChange = evt => {\n        console.log(evt.currentTarget.value);\n        const { name, value } = evt.currentTarget;\n        this.setState({ [name]: value });\n\n    };\n    handleSubmit = evt => {\n        evt.preventDefault();\n        const findContact = this.props.contacts.find(contact => contact.name === this.state.name && contact.number === this.state.number);\n\n        if (findContact) {\n            alert(`${this.state.name} is already in contacts!`);\n            this.reset();\n            return;\n        }\n        this.props.addContact(this.state.name, this.state.number);\n        this.reset();\n    }\n    reset = () => {\n        this.setState({ name: '', number: '' });\n    };\n\n    render() {\n        return (\n\n            <div className={styles.container}>\n                <form onSubmit={this.handleSubmit} className={styles.form}>\n                    <label htmlFor={this.inputId} className={styles.label}>\n\n                        Name:\n\n                        <input\n                            className=\"Container-form__input\"\n                            type=\"text\"\n                            name=\"name\"\n                            pattern=\"^[a-zA-ZÐ°-ÑÐ-Ð¯]+(([' -][a-zA-ZÐ°-ÑÐ-Ð¯ ])?[a-zA-ZÐ°-ÑÐ-Ð¯]*)*$\"\n                            title=\"ÐÐ¼Ñ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¸Ð· Ð±ÑÐºÐ², Ð°Ð¿Ð¾ÑÑÑÐ¾ÑÐ°, ÑÐ¸ÑÐµ Ð¸ Ð¿ÑÐ¾Ð±ÐµÐ»Ð¾Ð². ÐÐ°Ð¿ÑÐ¸Ð¼ÐµÑ Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan Ð¸ Ñ. Ð¿.\"\n                            required\n                            value={this.state.name}\n                            onChange={this.handleInputChange}\n                            id={this.inputId}\n                        />\n                    </label>\n                    <label className={styles.label}>\n                        Number:\n                        <input\n                            type=\"tel\"\n                            name=\"number\"\n                            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                            title=\"ÐÐ¾Ð¼ÐµÑ ÑÐµÐ»ÐµÑÐ¾Ð½Ð° Ð´Ð¾Ð»Ð¶ÐµÐ½ ÑÐ¾ÑÑÐ¾ÑÑÑ ÑÐ¸ÑÑ Ð¸ Ð¼Ð¾Ð¶ÐµÑ ÑÐ¾Ð´ÐµÑÐ¶Ð°ÑÑ Ð¿ÑÐ¾Ð±ÐµÐ»Ñ, ÑÐ¸ÑÐµ, ÐºÑÑÐ³Ð»ÑÐµ ÑÐºÐ¾Ð±ÐºÐ¸ Ð¸ Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸Ð½Ð°ÑÑÑÑ Ñ +\"\n                            value={this.state.number}\n                            onChange={this.handleInputChange}\n                            required\n                        />\n                    </label>\n\n                    <button type=\"submit\" className=\"Container-form__btn\">Add Contact</button>\n                </form>\n            </div>\n        )\n    };\n};\n\n\nconst mapStateToProps = state => ({\n    contacts: getItems(state),\n});\nconst mapDispatchToProps = dispatch => ({\n    addContact: (name, number) => dispatch(addContact(name, number)),\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n","import axios from 'axios';\nimport * as phonebooksActions from './phonebooks-actions';\n\n// axios.defaults.baseURL = 'http://localhost:4040';\n\nexport const fetchContact = () => async dispatch => {\n    dispatch(phonebooksActions.fetchContactRequest());\n\n    try {\n        const { data } = await axios.get('./contacts');\n        dispatch(phonebooksActions.fetchContactSuccess(data));\n    } catch (error) {\n        dispatch(phonebooksActions.fetchContactError(error.message));\n    }\n    // axios\n    //     .get('./contacts')\n    //     .then(({ data }) => dispatch(phonebooksActions.fetchContactSuccess(data)))\n    //     .catch(error => dispatch(phonebooksActions.fetchContactError(error)));\n}\n\nexport const addContact = (name, number) => dispatch => {\n    const contact = {\n        name,\n        number,\n    };\n    dispatch(phonebooksActions.addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) =>\n            dispatch(phonebooksActions.addContactSuccess(data)))\n        .catch(error => dispatch(phonebooksActions.addContactError(error.message)));\n};\n\nexport const deleteContact = id => dispatch => {\n    dispatch(phonebooksActions.deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${id}`)\n        .then(() => dispatch(phonebooksActions.deleteContactSuccess(id)))\n        .catch(error => dispatch(phonebooksActions.deleteContactError(error.message)));\n\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n// import styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport { getFilter, changeFilter } from '../../redux/phonebooks';\n// import * as phonebooksActions from '../../redux/phonebooks/phonebooks-actions';\n// import * as phonebookSelectors from '../../redux/phonebooks/phonebooks-selectors';\n\nconst Filter = ({ value, Ð¾nChange }) => (\n    <label>\n        FInd contacts by name\n        <input\n            type=\"text\"\n            value={value}\n            onChange={Ð¾nChange}\n        />\n    </label>\n);\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n}\n\nconst mapStateToProps = (state) => ({\n    value: getFilter(state),\n\n});\n\nconst mapDispatchToProps = dispatch => ({\n    Ð¾nChange: e => dispatch(changeFilter(e.currentTarget.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from './ContactList.module.css';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getVisibleContacts, deleteContact } from '../../redux/phonebooks';\n// import * as phonebookOperations from '../../redux/phonebooks/phonebooks-operations';\n// import * as phonebookSelectors from '../../redux/phonebooks/phonebooks-selectors';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n    return (\n        <div className=\"Contact-container\">\n            <ul >\n                {contacts.map(contact => (\n                    <li className={styles.contactList} key={uuidv4()}>{contact.name} : {contact.number}\n                        <button onClick={() => onDeleteContact(contact.id)} >Delete</button>\n                    </li>))\n                }\n            </ul>\n        </div>\n    )\n};\n\nContactList.propTypes = {\n    contact: PropTypes.arrayOf(\n        PropTypes.shape({\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n            id: PropTypes.string.isRequired,\n\n        })\n    ),\n};\n\nconst mapStateToProps = (state) => ({\n    contacts: getVisibleContacts(state),\n});\n\n\nconst mapDispatchToProps = dispatch => ({\n    onDeleteContact: id => dispatch(deleteContact(id)),\n\n});\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { getIsloadingContacts, fetchContact } from '../redux/phonebooks';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport ContactList from '../components/ContactList';\n\nclass Contacts extends Component {\n    state = {\n    };\n\n    componentDidMount() {\n        this.props.fetchContact();\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>Phonebook</h1>\n                <ContactForm />\n\n                <h2>Contacts</h2>\n                <Filter />\n                {this.props.isloadingContacts && <h1>loading...</h1>}\n                <ContactList />\n\n            </div>\n        )\n    }\n\n\n}\nconst mapStateToProps = state => ({\n    isloadingContacts: getIsloadingContacts(state),\n})\n\nconst mapDispatchToProps = dispatch => ({\n    fetchContact: () => dispatch(fetchContact())\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Contacts);\n"],"sourceRoot":""}